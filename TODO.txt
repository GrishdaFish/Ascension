BEFORE INITIAL RELEASE

Finialize (mostly) data structures.
Implement timing system - Done, need to have different actions take different ammounts of time
Keep track of dungeon levels - done
add experience and level up system - roughly done
create saving and loading system - Done

options menu
help menu
character stats menu or merge with equipment menu

create classes and races (player generation)
More monsters, items and spells
Merchant "shopping cart" + selling to NPCs


Ranged combat
Re-do save system - Done



AFTER INITIAL RELEASE (First update) [excluding bugs] {Not a complete list}
tweak map generation to have different styles of flooring and room coloring.
doors
traps
Monster gore and blood.
NPCs
Static rooms/levels
Cave Generator
Add Town (non menu)
Add in plenty of options
Improve UI and Mouse Support
Create spell effects

Scrolling map in gEngine(post-poned until the rewrite)


LARGE OVERARCHING GOALS (Not a complete list)
Static World Generation
Quests, large and small (possible storyline)
Crafting
Starting settlements
Survival aspects(?)
Terrain manipulation, dungeon/world wide
Random world events (meteorites, hurricanes, tornadoes, earthquakes, volcanoes, etc...)
Raidboss style fights
Biomes and more random dungeon elements
Item pictures for inventory


Technical Goals
Separate game logic from engine logic
Basic engine initialization should give a screen with either a menu or create a basic "hello world" style module
    basic module would be room with "@" walking around
    Engine Logic:
        Game logic as modules

        Light mask
            Subcell Resolution Support # Done, but extremely  slow. Fix with numpy?
            Variable falloff for lights

        Particles
            give option to use "char" or light map effects (or both?)
            Implement light map particles
            Subcell resolution support # Done
            integrate with timing systems (ticker)

        Map Generation
            Separate files for each type of generator
            base file to dynamically load new generators and interface with gEngine

        Drawing
            Subcell support # Done
            Scrolling support
            subcell scrolling support

        Libtcod integration
            wrap everything from libtcod into gEngine
                avoid ANY calls to libtcod from game logic, in case of API breaks

        Timing system
            multiple timing system support (can switch between systems)
            Ticker
            Igo,Ugo

        Saving and Loading

        Input Handling (keyboard and mouse)

        Images

        Logging

        Menus
            Dialogs

        Utilities

        All External Data handling
            Config files
            Data files

        (sound)
        (music)
        (animation)