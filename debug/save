object_type "map" {
string type="level_1"
string bitmask_map
}
object_type "player" {
string ob_type="player"
int pos_x=47
int pos_y=33
char cell='@'
string name="player"
color col="255,255,255"
bool blocks=true
int max_hp=90
int hp=90
int defense=2
int power=5
string type="melee"
int money=200
int speed=10
}
object_type "misc" {
string ob_type="misc"
int pos_x=65
int pos_y=8
char cell='>'
string name="stairs down"
color col="255,255,255"
bool blocks=false
string ob_type="misc"
string type="down"
}
object_type "misc" {
string ob_type="misc"
int pos_x=47
int pos_y=33
char cell='<'
string name="stairs up"
color col="255,255,255"
bool blocks=false
string ob_type="misc"
string type="up"
}
object_type "armor" {
string ob_type="armor"
int pos_x=47
int pos_y=33
char cell=']'
string name="leather chest armor"
color col="94,75,47"
bool blocks=false
string ob_type="armor"
int defense=2
string location="torso"
string best_defense_type="blunt"
string worst_defense_type="piercing"
string type="armor"
}
object_type "weapon" {
string ob_type="weapon"
int pos_x=47
int pos_y=33
char cell='/'
string name="wooden longsword"
color col="94,75,47"
bool blocks=false
string ob_type="weapon"
int max_power=9
int min_power=4
float crit_bonus=3.000000
int handed=1
bool dual_wield=false
string damage_type="slashing"
string type="melee"
}
object_type "consumable" {
string ob_type="consumable"
int pos_x=4
int pos_y=35
char cell='!'
string name="light healing potion"
color col="127,0,255"
bool blocks=false
string ob_type="consumable"
int min=4
int max=6
int range=0
int targets=0
string effect_type="heal"
string additional_effects="none"
string spell_effects=""
color effect_col="0,0,0"
string type="consumable"
}
object_type "consumable" {
string ob_type="consumable"
int pos_x=6
int pos_y=33
char cell='!'
string name="healing potion"
color col="255,0,0"
bool blocks=false
string ob_type="consumable"
int min=10
int max=12
int range=0
int targets=0
string effect_type="heal"
string additional_effects="none"
string spell_effects=""
color effect_col="0,0,0"
string type="consumable"
}
object_type "consumable" {
string ob_type="consumable"
int pos_x=32
int pos_y=26
char cell='#'
string name="scroll of fireball"
color col="255,255,0"
bool blocks=false
string ob_type="consumable"
int min=12
int max=20
int range=8
int targets=0
string effect_type="fireball"
string additional_effects="burn"
string spell_effects=""
color effect_col="0,0,0"
string type="consumable"
}
object_type "consumable" {
string ob_type="consumable"
int pos_x=35
int pos_y=30
char cell='!'
string name="light healing potion"
color col="127,0,255"
bool blocks=false
string ob_type="consumable"
int min=4
int max=6
int range=0
int targets=0
string effect_type="heal"
string additional_effects="none"
string spell_effects=""
color effect_col="0,0,0"
string type="consumable"
}
object_type "consumable" {
string ob_type="consumable"
int pos_x=39
int pos_y=12
char cell='!'
string name="light healing potion"
color col="127,0,255"
bool blocks=false
string ob_type="consumable"
int min=4
int max=6
int range=0
int targets=0
string effect_type="heal"
string additional_effects="none"
string spell_effects=""
color effect_col="0,0,0"
string type="consumable"
}
object_type "consumable" {
string ob_type="consumable"
int pos_x=43
int pos_y=18
char cell='!'
string name="light healing potion"
color col="127,0,255"
bool blocks=false
string ob_type="consumable"
int min=4
int max=6
int range=0
int targets=0
string effect_type="heal"
string additional_effects="none"
string spell_effects=""
color effect_col="0,0,0"
string type="consumable"
}
object_type "consumable" {
string ob_type="consumable"
int pos_x=68
int pos_y=20
char cell='!'
string name="healing potion"
color col="255,0,0"
bool blocks=false
string ob_type="consumable"
int min=10
int max=12
int range=0
int targets=0
string effect_type="heal"
string additional_effects="none"
string spell_effects=""
color effect_col="0,0,0"
string type="consumable"
}
object_type "consumable" {
string ob_type="consumable"
int pos_x=66
int pos_y=21
char cell='#'
string name="scroll of fireball"
color col="255,255,0"
bool blocks=false
string ob_type="consumable"
int min=12
int max=20
int range=8
int targets=0
string effect_type="fireball"
string additional_effects="burn"
string spell_effects=""
color effect_col="0,0,0"
string type="consumable"
}
object_type "monster" {
string ob_type="monster"
int pos_x=45
int pos_y=35
char cell='g'
string name="goblin"
color col="197,136,124"
bool blocks=true
int max_hp=5
int hp=5
int defense=0
int power=5
string type="melee"
int money=0
int speed=15
}
object_type "monster" {
string ob_type="monster"
int pos_x=52
int pos_y=15
char cell='T'
string name="troll"
color col="0,127,0"
bool blocks=true
int max_hp=16
int hp=16
int defense=1
int power=5
string type="melee"
int money=0
int speed=25
}
object_type "monster" {
string ob_type="monster"
int pos_x=22
int pos_y=3
char cell='g'
string name="goblin"
color col="197,136,124"
bool blocks=true
int max_hp=5
int hp=5
int defense=0
int power=5
string type="melee"
int money=0
int speed=15
}
object_type "monster" {
string ob_type="monster"
int pos_x=22
int pos_y=7
char cell='T'
string name="troll"
color col="0,127,0"
bool blocks=true
int max_hp=16
int hp=16
int defense=1
int power=5
string type="melee"
int money=0
int speed=25
}
object_type "monster" {
string ob_type="monster"
int pos_x=66
int pos_y=27
char cell='h'
string name="hobgoblin"
color col="255,255,114"
bool blocks=true
int max_hp=12
int hp=12
int defense=1
int power=5
string type="melee"
int money=0
int speed=5
}
object_type "monster" {
string ob_type="monster"
int pos_x=69
int pos_y=20
char cell='o'
string name="orc"
color col="0,191,0"
bool blocks=true
int max_hp=10
int hp=10
int defense=0
int power=5
string type="melee"
int money=0
int speed=15
}
object_type "monster" {
string ob_type="monster"
int pos_x=38
int pos_y=13
char cell='T'
string name="troll"
color col="0,127,0"
bool blocks=true
int max_hp=16
int hp=16
int defense=1
int power=5
string type="melee"
int money=0
int speed=25
}
object_type "monster" {
string ob_type="monster"
int pos_x=34
int pos_y=15
char cell='g'
string name="goblin"
color col="197,136,124"
bool blocks=true
int max_hp=5
int hp=5
int defense=0
int power=5
string type="melee"
int money=0
int speed=15
}
object_type "monster" {
string ob_type="monster"
int pos_x=65
int pos_y=10
char cell='o'
string name="orc"
color col="0,191,0"
bool blocks=true
int max_hp=10
int hp=10
int defense=0
int power=5
string type="melee"
int money=0
int speed=15
}
object_type "monster" {
string ob_type="monster"
int pos_x=63
int pos_y=11
char cell='o'
string name="orc"
color col="0,191,0"
bool blocks=true
int max_hp=10
int hp=10
int defense=0
int power=5
string type="melee"
int money=0
int speed=15
}
object_type "monster" {
string ob_type="monster"
int pos_x=30
int pos_y=12
char cell='h'
string name="hobgoblin"
color col="255,255,114"
bool blocks=true
int max_hp=12
int hp=12
int defense=1
int power=5
string type="melee"
int money=0
int speed=5
}
object_type "monster" {
string ob_type="monster"
int pos_x=38
int pos_y=28
char cell='o'
string name="orc"
color col="0,191,0"
bool blocks=true
int max_hp=10
int hp=10
int defense=0
int power=5
string type="melee"
int money=0
int speed=15
}
object_type "monster" {
string ob_type="monster"
int pos_x=32
int pos_y=32
char cell='h'
string name="hobgoblin"
color col="255,255,114"
bool blocks=true
int max_hp=12
int hp=12
int defense=1
int power=5
string type="melee"
int money=0
int speed=5
}
object_type "monster" {
string ob_type="monster"
int pos_x=38
int pos_y=27
char cell='h'
string name="hobgoblin"
color col="255,255,114"
bool blocks=true
int max_hp=12
int hp=12
int defense=1
int power=5
string type="melee"
int money=0
int speed=5
}
object_type "monster" {
string ob_type="monster"
int pos_x=8
int pos_y=32
char cell='r'
string name="rat"
color col="94,75,47"
bool blocks=true
int max_hp=5
int hp=5
int defense=0
int power=5
string type="melee"
int money=0
int speed=10
}
object_type "monster" {
string ob_type="monster"
int pos_x=6
int pos_y=29
char cell='o'
string name="orc"
color col="0,191,0"
bool blocks=true
int max_hp=10
int hp=10
int defense=0
int power=5
string type="melee"
int money=0
int speed=15
}
object_type "monster" {
string ob_type="monster"
int pos_x=56
int pos_y=40
char cell='h'
string name="hobgoblin"
color col="255,255,114"
bool blocks=true
int max_hp=12
int hp=12
int defense=1
int power=5
string type="melee"
int money=0
int speed=5
}
object_type "monster" {
string ob_type="monster"
int pos_x=58
int pos_y=39
char cell='T'
string name="troll"
color col="0,127,0"
bool blocks=true
int max_hp=16
int hp=16
int defense=1
int power=5
string type="melee"
int money=0
int speed=25
}
